// Code generated by "stringer -type C"; DO NOT EDIT.

package gatw

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[None-0]
	_ = x[Unit-1]
	_ = x[Pair-3]
	_ = x[Enum-7]
	_ = x[Sequence-15]
	_ = x[Tuple-31]
	_ = x[Record-63]
	_ = x[Atom-127]
	_ = x[Function-255]
	_ = x[Composition-511]
	_ = x[Continuation-1023]
	_ = x[Definition-2047]
	_ = x[Parametric-4095]
	_ = x[Polymorph-8191]
	_ = x[Variant-16383]
	_ = x[Predicate-32767]
	_ = x[Optional-65535]
	_ = x[Equality-131071]
	_ = x[BitFlag-262143]
	_ = x[Keyword-524287]
	_ = x[Symbol-1048575]
	_ = x[Number-2097151]
	_ = x[Position-4194303]
	_ = x[Ordered-8388607]
	_ = x[Element-16777215]
	_ = x[Member-33554431]
	_ = x[Field-67108863]
	_ = x[Partial-134217727]
	_ = x[Data-268435455]
	_ = x[Kind-536870911]
}

const _C_name = "NoneUnitPairEnumSequenceTupleRecordAtomFunctionCompositionContinuationDefinitionParametricPolymorphVariantPredicateOptionalEqualityBitFlagKeywordSymbolNumberPositionOrderedElementMemberFieldPartialDataKind"

var _C_map = map[C]string{
	0:         _C_name[0:4],
	1:         _C_name[4:8],
	3:         _C_name[8:12],
	7:         _C_name[12:16],
	15:        _C_name[16:24],
	31:        _C_name[24:29],
	63:        _C_name[29:35],
	127:       _C_name[35:39],
	255:       _C_name[39:47],
	511:       _C_name[47:58],
	1023:      _C_name[58:70],
	2047:      _C_name[70:80],
	4095:      _C_name[80:90],
	8191:      _C_name[90:99],
	16383:     _C_name[99:106],
	32767:     _C_name[106:115],
	65535:     _C_name[115:123],
	131071:    _C_name[123:131],
	262143:    _C_name[131:138],
	524287:    _C_name[138:145],
	1048575:   _C_name[145:151],
	2097151:   _C_name[151:157],
	4194303:   _C_name[157:165],
	8388607:   _C_name[165:172],
	16777215:  _C_name[172:179],
	33554431:  _C_name[179:185],
	67108863:  _C_name[185:190],
	134217727: _C_name[190:197],
	268435455: _C_name[197:201],
	536870911: _C_name[201:205],
}

func (i C) String() string {
	if str, ok := _C_map[i]; ok {
		return str
	}
	return "C(" + strconv.FormatInt(int64(i), 10) + ")"
}
