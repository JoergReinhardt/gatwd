// Code generated by "stringer -type TyToken"; DO NOT EDIT.

package functions

import "strconv"

const _TyToken_name = "Syntax_TokenTypeFnc_TokenTypeNat_TokenProperty_TokenData_Value_TokenError_TokenDigit_TokenCapital_TokenLetter_TokenWord_TokenName_TokenScentenceMark_TokenKeyword_TokenPair_TokenToken_CollectionTree_Node_Token"

var _TyToken_map = map[TyToken]string{
	1:     _TyToken_name[0:12],
	2:     _TyToken_name[12:25],
	4:     _TyToken_name[25:38],
	8:     _TyToken_name[38:52],
	16:    _TyToken_name[52:68],
	32:    _TyToken_name[68:79],
	64:    _TyToken_name[79:90],
	128:   _TyToken_name[90:103],
	256:   _TyToken_name[103:115],
	512:   _TyToken_name[115:125],
	1024:  _TyToken_name[125:135],
	2048:  _TyToken_name[135:154],
	4096:  _TyToken_name[154:167],
	8192:  _TyToken_name[167:177],
	16384: _TyToken_name[177:193],
	32768: _TyToken_name[193:208],
}

func (i TyToken) String() string {
	if str, ok := _TyToken_map[i]; ok {
		return str
	}
	return "TyToken(" + strconv.FormatInt(int64(i), 10) + ")"
}
