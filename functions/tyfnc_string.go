// Code generated by "stringer -type=TyFnc"; DO NOT EDIT.

package functions

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Type-1]
	_ = x[Data-2]
	_ = x[Value-4]
	_ = x[Class-8]
	_ = x[Lambda-16]
	_ = x[Constant-32]
	_ = x[Generator-64]
	_ = x[Accumulator-128]
	_ = x[Constructor-256]
	_ = x[Sequence-512]
	_ = x[Property-1024]
	_ = x[Argument-2048]
	_ = x[Pattern-4096]
	_ = x[Element-8192]
	_ = x[Lexical-16384]
	_ = x[Symbol-32768]
	_ = x[Arity-65536]
	_ = x[Index-131072]
	_ = x[Key-262144]
	_ = x[True-524288]
	_ = x[False-1048576]
	_ = x[Undecided-2097152]
	_ = x[Equal-4194304]
	_ = x[Lesser-8388608]
	_ = x[Greater-16777216]
	_ = x[Min-33554432]
	_ = x[Max-67108864]
	_ = x[Switch-134217728]
	_ = x[Case-268435456]
	_ = x[Just-536870912]
	_ = x[None-1073741824]
	_ = x[Option-2147483648]
	_ = x[Polymorph-4294967296]
	_ = x[Either-8589934592]
	_ = x[Or-17179869184]
	_ = x[Natural-34359738368]
	_ = x[Integer-68719476736]
	_ = x[Real-137438953472]
	_ = x[Ratio-274877906944]
	_ = x[Letter-549755813888]
	_ = x[Text-1099511627776]
	_ = x[Bytes-2199023255552]
	_ = x[List-4398046511104]
	_ = x[Vector-8796093022208]
	_ = x[Set-17592186044416]
	_ = x[Pair-35184372088832]
	_ = x[Enum-70368744177664]
	_ = x[Tuple-140737488355328]
	_ = x[Record-281474976710656]
	_ = x[State-562949953421312]
	_ = x[IO-1125899906842624]
	_ = x[Parametric-2251799813685248]
}

const _TyFnc_name = "TypeDataValueClassLambdaConstantGeneratorAccumulatorConstructorSequencePropertyArgumentPatternElementLexicalSymbolArityIndexKeyTrueFalseUndecidedEqualLesserGreaterMinMaxSwitchCaseJustNoneOptionPolymorphEitherOrNaturalIntegerRealRatioLetterTextBytesListVectorSetPairEnumTupleRecordStateIOParametric"

var _TyFnc_map = map[TyFnc]string{
	1:                _TyFnc_name[0:4],
	2:                _TyFnc_name[4:8],
	4:                _TyFnc_name[8:13],
	8:                _TyFnc_name[13:18],
	16:               _TyFnc_name[18:24],
	32:               _TyFnc_name[24:32],
	64:               _TyFnc_name[32:41],
	128:              _TyFnc_name[41:52],
	256:              _TyFnc_name[52:63],
	512:              _TyFnc_name[63:71],
	1024:             _TyFnc_name[71:79],
	2048:             _TyFnc_name[79:87],
	4096:             _TyFnc_name[87:94],
	8192:             _TyFnc_name[94:101],
	16384:            _TyFnc_name[101:108],
	32768:            _TyFnc_name[108:114],
	65536:            _TyFnc_name[114:119],
	131072:           _TyFnc_name[119:124],
	262144:           _TyFnc_name[124:127],
	524288:           _TyFnc_name[127:131],
	1048576:          _TyFnc_name[131:136],
	2097152:          _TyFnc_name[136:145],
	4194304:          _TyFnc_name[145:150],
	8388608:          _TyFnc_name[150:156],
	16777216:         _TyFnc_name[156:163],
	33554432:         _TyFnc_name[163:166],
	67108864:         _TyFnc_name[166:169],
	134217728:        _TyFnc_name[169:175],
	268435456:        _TyFnc_name[175:179],
	536870912:        _TyFnc_name[179:183],
	1073741824:       _TyFnc_name[183:187],
	2147483648:       _TyFnc_name[187:193],
	4294967296:       _TyFnc_name[193:202],
	8589934592:       _TyFnc_name[202:208],
	17179869184:      _TyFnc_name[208:210],
	34359738368:      _TyFnc_name[210:217],
	68719476736:      _TyFnc_name[217:224],
	137438953472:     _TyFnc_name[224:228],
	274877906944:     _TyFnc_name[228:233],
	549755813888:     _TyFnc_name[233:239],
	1099511627776:    _TyFnc_name[239:243],
	2199023255552:    _TyFnc_name[243:248],
	4398046511104:    _TyFnc_name[248:252],
	8796093022208:    _TyFnc_name[252:258],
	17592186044416:   _TyFnc_name[258:261],
	35184372088832:   _TyFnc_name[261:265],
	70368744177664:   _TyFnc_name[265:269],
	140737488355328:  _TyFnc_name[269:274],
	281474976710656:  _TyFnc_name[274:280],
	562949953421312:  _TyFnc_name[280:285],
	1125899906842624: _TyFnc_name[285:287],
	2251799813685248: _TyFnc_name[287:297],
}

func (i TyFnc) String() string {
	if str, ok := _TyFnc_map[i]; ok {
		return str
	}
	return "TyFnc(" + strconv.FormatInt(int64(i), 10) + ")"
}
