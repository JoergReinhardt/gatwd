// Code generated by "stringer -type=Otype"; DO NOT EDIT.

package run

import "strconv"

const (
	_Otype_name_0 = "DataConstructorFunctionClosure"
	_Otype_name_1 = "PartialApplication"
	_Otype_name_2 = "Declaration"
	_Otype_name_3 = "Indirection"
	_Otype_name_4 = "BlackHole"
	_Otype_name_5 = "ByteCode"
	_Otype_name_6 = "Thunk"
	_Otype_name_7 = "IOSync"
	_Otype_name_8 = "IOAsync"
	_Otype_name_9 = "IOShared"
)

var (
	_Otype_index_0 = [...]uint8{0, 15, 30}
)

func (i Otype) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _Otype_name_0[_Otype_index_0[i]:_Otype_index_0[i+1]]
	case i == 4:
		return _Otype_name_1
	case i == 8:
		return _Otype_name_2
	case i == 16:
		return _Otype_name_3
	case i == 32:
		return _Otype_name_4
	case i == 64:
		return _Otype_name_5
	case i == 128:
		return _Otype_name_6
	case i == 256:
		return _Otype_name_7
	case i == 512:
		return _Otype_name_8
	case i == 1024:
		return _Otype_name_9
	default:
		return "Otype(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
