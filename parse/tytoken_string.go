// Code generated by "stringer -type TyToken"; DO NOT EDIT.

package parse

import "strconv"

const (
	_TyToken_name_0 = "Syntax_TokenTypeHO_Token"
	_TyToken_name_1 = "TypePrim_Token"
	_TyToken_name_2 = "Property_Token"
	_TyToken_name_3 = "Data_Value_Token"
	_TyToken_name_4 = "Pair_Value_Token"
	_TyToken_name_5 = "Token_Collection"
	_TyToken_name_6 = "Argument_Token"
	_TyToken_name_7 = "Parameter_Token"
	_TyToken_name_8 = "Tree_Node_Token"
)

var (
	_TyToken_index_0 = [...]uint8{0, 12, 24}
)

func (i TyToken) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _TyToken_name_0[_TyToken_index_0[i]:_TyToken_index_0[i+1]]
	case i == 4:
		return _TyToken_name_1
	case i == 8:
		return _TyToken_name_2
	case i == 16:
		return _TyToken_name_3
	case i == 32:
		return _TyToken_name_4
	case i == 64:
		return _TyToken_name_5
	case i == 128:
		return _TyToken_name_6
	case i == 256:
		return _TyToken_name_7
	case i == 512:
		return _TyToken_name_8
	default:
		return "TyToken(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
