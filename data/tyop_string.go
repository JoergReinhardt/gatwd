// Code generated by "stringer -type=TyOp"; DO NOT EDIT.

package data

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Not-0]
	_ = x[And-1]
	_ = x[Or-2]
	_ = x[Xor-3]
	_ = x[AndNot-4]
	_ = x[ShiftL-5]
	_ = x[ShiftR-6]
	_ = x[Negate-7]
	_ = x[Add-8]
	_ = x[Substract-9]
	_ = x[Multiply-10]
	_ = x[QuoRatio-11]
	_ = x[Quotient-12]
	_ = x[Power-13]
	_ = x[Greater-14]
	_ = x[Lesser-15]
	_ = x[Equal-16]
}

const _TyOp_name = "NotAndOrXorAndNotShiftLShiftRNegateAddSubstractMultiplyQuoRatioQuotientPowerGreaterLesserEqual"

var _TyOp_index = [...]uint8{0, 3, 6, 8, 11, 17, 23, 29, 35, 38, 47, 55, 63, 71, 76, 83, 89, 94}

func (i TyOp) String() string {
	if i >= TyOp(len(_TyOp_index)-1) {
		return "TyOp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TyOp_name[_TyOp_index[i]:_TyOp_index[i+1]]
}
